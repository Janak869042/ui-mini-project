{"ast":null,"code":"var _jsxFileName = \"/home/janak/Desktop/my-app_2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./components/NoteForm\";\nimport NoteForm from \"./components/NoteForm\";\nimport NoteHeader from \"./components/NoteHeader\";\nimport Note from \"./components/Note\";\n//retrieve data from local\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst noteFromLocalStorage = () => {\n  let getNote = JSON.parse(localStorage.getItem(\"notes\"));\n  if (getNote) {\n    return getNote;\n  }\n  return [];\n};\nconst App = props => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [notes, setNotes] = useState(noteFromLocalStorage);\n  const [oldNoteId, newNoteId] = useState(\"\");\n  //store data for local\n  localStorage.setItem(\"notes\", JSON.stringify(notes));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NoteHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Interface, {\n      oldNoteId: oldNoteId,\n      newNoteId: newNoteId,\n      notes: notes,\n      setNotes: setNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      title: title,\n      setTitle: setTitle,\n      discription: content,\n      setDesciption: setContent,\n      setNotes: setNotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Note, {\n      notes: notes,\n      setNotes: setNotes,\n      newNoteId: newNoteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"di\", {\n      class: \"App-foot\",\n      children: \" \\xA9 Janak Singh \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BtS1Jb63Yg5/5zL4MsYdqrDFrWg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NoteForm","NoteHeader","Note","noteFromLocalStorage","getNote","JSON","parse","localStorage","getItem","App","props","title","setTitle","content","setContent","notes","setNotes","oldNoteId","newNoteId","setItem","stringify"],"sources":["/home/janak/Desktop/my-app_2/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./components/NoteForm\";\nimport NoteForm from \"./components/NoteForm\";\nimport NoteHeader from \"./components/NoteHeader\";\nimport Note from \"./components/Note\";\n//retrieve data from local\nconst noteFromLocalStorage = () => {\n  let getNote = JSON.parse(localStorage.getItem(\"notes\"));\n  if (getNote) {\n    return getNote;\n  }\n  return [];\n};\nconst App = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [notes, setNotes] = useState(noteFromLocalStorage);\n\n  const [oldNoteId, newNoteId] = useState(\"\");\n//store data for local\n  localStorage.setItem(\"notes\", JSON.stringify(notes));\n  return (\n    <div>\n      <NoteHeader />\n      <Interface\n        oldNoteId={oldNoteId} newNoteId={newNoteId}\n        notes={notes} setNotes={setNotes}\n      />\n      <NoteForm\n        title={title} setTitle={setTitle} discription={content} setDesciption={setContent}\n        setNotes={setNotes}\n      />\n      <Note notes={notes} setNotes={setNotes} newNoteId={newNoteId} />\n    <di class=\"App-foot\"> &copy; Janak Singh </di>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,IAAI,MAAM,mBAAmB;AACpC;AAAA;AACA,MAAMC,oBAAoB,GAAG,MAAM;EACjC,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACvD,IAAIJ,OAAO,EAAE;IACX,OAAOA,OAAO;EAChB;EACA,OAAO,EAAE;AACX,CAAC;AACD,MAAMK,GAAG,GAAIC,KAAK,IAAK;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACI,oBAAoB,CAAC;EAExD,MAAM,CAACc,SAAS,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC7C;EACEQ,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEd,IAAI,CAACe,SAAS,CAACL,KAAK,CAAC,CAAC;EACpD,oBACE;IAAA,wBACE,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eACd,QAAC,SAAS;MACR,SAAS,EAAEE,SAAU;MAAC,SAAS,EAAEC,SAAU;MAC3C,KAAK,EAAEH,KAAM;MAAC,QAAQ,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QACjC,eACF,QAAC,QAAQ;MACP,KAAK,EAAEL,KAAM;MAAC,QAAQ,EAAEC,QAAS;MAAC,WAAW,EAAEC,OAAQ;MAAC,aAAa,EAAEC,UAAW;MAClF,QAAQ,EAAEE;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB,eACF,QAAC,IAAI;MAAC,KAAK,EAAED,KAAM;MAAC,QAAQ,EAAEC,QAAS;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAClE;MAAI,KAAK,EAAC,UAAU;MAAA,UAAC;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEV,CAAC;AAAC,GAxBIT,GAAG;AAAA,KAAHA,GAAG;AAyBT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}